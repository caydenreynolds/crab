// *****************************************
// *             STDLIB STUFF              *
// *****************************************

struct Int {
    __uint64__ value
}

impl Int {
    fn add(Int other) -> Int {
        return Int {
            value = __add_int__(self.value, other.value)
        }
    }
}

fn print(String str, Bool newline=true) {
    printf(str)
    if newline {
        printf("\n")
    }
}


// *****************************************
// *              TEST STUFF               *
// *****************************************

struct GymGoer {
    String name,
    Int fitness,
}

impl GymGoer {
    fn go_to_the_gym() {
        print(self.name, newline=false)
        print(" went to the gym")
    }
}

fn new_gym_goer() -> GymGoer {
    return GymGoer {name = "Phillip",fitness = 12345}
}

fn main() -> Int {
    print("foo", newline=false)
    print("bar", newline=true,)
    let my_gym_goer = new_gym_goer()
    my_gym_goer.go_to_the_gym()
    //do {
    //    print("do while")
    //} while true
    //while true {
    //    print("just a while")
    //}
    let yo_momma = so_ugly()
    return yo_momma
}

fn so_ugly() -> Int {
    let a_variable = 40
    let b = false
    if b {
        a_variable = a_variable.add(104)
        print("12 squared")
    } else {
        a_variable = a_variable.add(2)
        print("Life, the universe, and everything")
    }
    let message = "foo"
    print(message)
    print("bar")
    message = get_str()
    print(get_str())
    return a_variable
}

fn get_str(,) -> String {
    let message = "A string message"
    if true {
        return message
    } else {
        return "A different string message"
    }
}
